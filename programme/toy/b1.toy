00: 0000 	;      BUF DUP 0x10                ;int buffer[16] = {0};
10: 7FF0 	;  MAIN LDA    RF  0xF0            ;initialize stack pointer
11: 7101 	;       LDA    R1  1               ;initialize constant 1
12: 7C00 	;       LDA    RC  0               ;int i;
13: 7B00 	;       LDA    RB  0               ;int X;
14: 7A00 	;       LDA    RA  0               ;int digit;
15: 7900 	;       LDA    R9  BUF             ;int* R9 = buffer;
16: 7800 	;       LDA    R8  0               ;int halt;
17: 7780 	;       LDA    R7  0x80            ;int plus = 0x802B;
18: 7208 	;       LDA    R2  8               ;
19: 5772 	;       SHL    R7  R7  R2          ;
1A: 722B 	;       LDA    R2  0x2B            ;           
1B: 1772 	;       ADD    R7  R7  R2          ;
1C: 7680 	;       LDA    R6  0x80            ;int multiplier = 0x802A;
1D: 7208 	;       LDA    R2  8               ;
1E: 5662 	;       SHL    R6  R6  R2          ;
1F: 722A 	;       LDA    R2  0x2A            ;
20: 1662 	;       ADD    R6  R6  R2          ;
21: 7580 	;       LDA    R5  0x80            ;int newline = 0x800A;
22: 7208 	;       LDA    R2  8               ;
23: 5552 	;       SHL    R5  R5  R2          ;
24: 720A 	;       LDA    R2  0x0A            ;
25: 1552 	;       ADD    R5  R5  R2          ;
26: 7400 	;       LDA    R4  0               ;int controller;
27: FE2F 	;  A0  JL  RE  LL0                 ;A0:my_getchar();
28: FE36 	;      JL  RE  CC                  ;check_char();
29: C827 	;      BZ  R8  A0                  ;if (R8==0) goto A0;
2A: 0000 	;      HLT                         ;return 0;
2B: 82FE 	;  POL LD  R2  0xFE                ;check control register
2C: C22B 	;      BZ  R2  POL                 ;if control register is 0, goto POL
2D: 90FE 	;      ST  R0  0xFE                ;reset control register to 0
2E: EE00 	;      JR  RE                      ;RET
2F: 2FF1 	;  LL0 SUB RF  RF  R1              ;prolog: increase the stack by 1 position
30: BE0F 	;      STI RE  RF                  ;push RE, end prolog
31: FE2B 	;      JL  RE  POL                 ;call pulling routine
32: 8CFF 	;      LD  RC  0xFF                ;R2 = getchar();
33: AE0F 	;      LDI RE  RF                  ;epilog: copy the return adress from TOS into RE
34: 1FF1 	;      ADD RF  RF  R1              ;shrink the stack by 1 position
35: EE00 	;      JR  RE                      ;RET
36: 2FF1 	;  CC  SUB RF  RF  R1              ;prolog
37: BE0F 	;      STI RE  RF                  ;
38: 7203 	;      LDA R2  3                   ;3 local variables
39: 2FF2 	;      SUB RF  RF  R2              ;set new stack pointer
3A: B00F 	;      STI R0  0   RF              ;int result_ctrl = 0;
3B: B01F 	;      STI R0  1   RF              ;int number_ctrl = 0;
3C: B22F 	;      STI R2  2   RF              ;int nl_ctrl = 0;
3D: 7204 	;      LDA R2  4                   ;R2 = 4   ;
3E: 2342 	;      SUB R3  R4  R2              ;R3 = R4 - R2;
3F: D341 	;      BP  R3  G0                  ;if (R3>0) goto G0;
40: C044 	;      BZ  R0  G1                  ;goto G1;
41: B10F 	;  G0  STI R1  0   RF              ;G0:result_ctrl = 1;
42: 2442 	;      SUB R4  R4  R2              ;R4 -= 4   ;
43: C048 	;      BZ  R0  G2                  ;goto G2;
44: C346 	;  G1  BZ  R3  G3                  ;G1:if (R3==0) goto G3;
45: C048 	;      BZ  R0  G2                  ;goto G2;
46: B10F 	;  G3  STI R1  0   RF              ;G3:result_ctrl = 1;
47: 2442 	;      SUB R4  R4  R2              ;R4 -= 4   ;
48: 7202 	;  G2  LDA R2  2                   ;R2 = 2   ;
49: 2342 	;      SUB R3  R4  R2              ;R3 = R4 - R2;
4A: D34C 	;      BP  R3  H0                  ;if (R3>0) goto H0;
4B: C04F 	;      BZ  R0  H1                  ;goto H1;
4C: B11F 	;  H0  STI R1  1   RF              ;H0:number_ctrl = 1;
4D: 2442 	;      SUB R4  R4  R2              ;R4 -= R2;
4E: C053 	;      BZ  R0  H2                  ;goto H2;
4F: C351 	;  H1  BZ  R3  H3                  ;H01:if (R3==0) goto H3;
50: C053 	;      BZ  R0  H2                  ;goto H2;
51: B12F 	;  H3  STI R1  2   RF              ;H03:number_ctrl = 1;
52: 2442 	;      SUB R4  R4  R2              ;R4 -= R2;
53: B42F 	;  H2  STI R4  2   RF              ;H02:nl_ctrl = R4;
54: 7400 	;      LDA R4  0                   ;R4 = 0;
55: 7203 	;      LDA R2  3                   ;R2 = EOF;
56: 222C 	;      SUB R2  R2  RC              ;R2 -= RC;
57: C259 	;      BZ  R2  F1                  ;if (R2==0) goto F1;
58: C05A 	;      BZ  R0  F0
59: 7801 	;  F1  LDA R8  1                   ;F1:halt = 1;
5A: A20F 	;  F0  LDI R2  0   RF              
5B: D25D 	;      BP  R2  I0                  ;F0:if (result_ctrl>0) goto I0;
5C: C05F 	;      BZ  R0  I1                  ;goto I1;
5D: 7204 	;  I0  LDA R2  4                   ;I0:R2 = 4   ;
5E: 1442 	;      ADD R4  R4  R2              ;R4 += R2;
5F: A21F 	;  I1  LDI R2  1   RF              ;
60: D262 	;      BP  R2  J0                  ;I1:if (number_ctrl>0) goto J0;
61: C064 	;      BZ  R0  J1                  ;goto J1;
62: 7202 	;  J0  LDA R2  2                   ;J0:R2 = 2   ;
63: 1442 	;      ADD R4  R4  R2              ;R4 += R2;
64: A22F 	;  J1  LDI R2  2   RF              ;
65: D267 	;      BP  R2  K0                  ;J1:if (nl_ctrl>0) RD++;
66: C068 	;      BZ  R0  K1                  ;goto K1;
67: 1441 	;  K0  ADD R4  R4  R1              ;
68: 1FE0 	;  K1  ADD RF  RE  R0              ;epilog: restore old stack pointer
69: AE0F 	;      LDI RE  RF                  ;POP RE
6A: 1FF1 	;      ADD RF  RF  R1              ;
6B: EE00 	;      JR  RE                      ;

10: 7FF0 	;  MAIN LDA RF 0xF0            ;initialize stack pointer
11: 1EF0 	;       ADD RE RF R0           ;initializa MAIN base pointer
12: 7101 	;       LDA R1 1               ;constant 1
13: 7431 	;       LDA R4 BUF             ;int* buffer;
14: 9530 	;       ST  R5 H               ;int halt;
15: FD1E 	;  A0  JL  RD  LL0             ;A0:getchar();
16: C515 	;      BZ  R5  A0              ;if (halt==0) goto A00;
17: 1FE0 	;      ADD RF  RE  R0          ;epilog: restore old stack pointer
18: AE0F 	;      LDI RE  RF              ;restore old base pointer
19: 0000 	;      HLT                     ;return 0;
1A: 82FE 	;  POL LD  R2  0xFE        ;   check control register
1B: C21A 	;      BZ  R2  POL         ;   if control register is 0, goto POL    
1C: 90FE 	;      ST  R0  0xFE        ;   reset control register to 0
1D: ED00 	;      JR  RD
1E: 2FF1 	;  LL0 SUB RF  RF  R1          ;
1F: BD0F 	;      STI RD  RF              ;PUSH RD
20: 2FF1 	;      SUB RF  RF  R1          ;prolog
21: BE0F 	;      STI RE  RF              ;PUSH RE
22: 1EF0 	;      ADD RE  RF  R0          ;initialize getchar() base pointer
23: FD1A 	;      JL  RD  POL             ;CALL polling routine    
24: 8CFF 	;      LD  RC  0xFF            ;read from stdin
25: 7203 	;      LDA R2  3               ;R2 = EOF;
26: 222C 	;      SUB R2  R2  RC          ;temp = EOF - RC
27: C229 	;      BZ  R2  F1              ;if (RC==EOF) goto F1
28: C02A 	;      BZ  R0  F2              ;goto F2
29: 1510 	;  F1  ADD R5   R1  R0         ;halt = 1;
2A: 1FE0 	;  F2  ADD RF  RE  R0          ;epilog
2B: AE0F 	;      LDI RE  RF              ;
2C: 1FF1 	;      ADD RF  RF  R1          ;POP RE
2D: AD0F 	;      LDI RD  RF              ;POP return adress from stack
2E: 1FF1 	;      ADD RF  RF R1           ;
2F: ED00 	;      JR  RD                  ;
30: 0000 	;  H       DW  0               ;int halt;
31: 0000 	;  BUF     DUP 0x10            ;buffer
